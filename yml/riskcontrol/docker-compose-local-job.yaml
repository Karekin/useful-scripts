version: "2.2"
services:

  ### Zookeeper ###

  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.0
    hostname: zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - ./zookeeper-data:/var/lib/zookeeper/data
      - ./zookeeper-log:/var/lib/zookeeper/log

  kafka-cp-kafka-headless:
    image: confluentinc/cp-kafka:5.0.0
    hostname: kafka-cp-kafka-headless
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka-cp-kafka-headless:9092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1

      # 修改复制因子配置为单节点模式
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    depends_on:
      - zookeeper
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "9092" ]
      interval: 10s
      timeout: 10s
      retries: 5

  ### Schema Registry ###

  schema-registry:
    image: confluentinc/cp-schema-registry:5.0.0
    hostname: schema-registry
    ports:
      - "18081:18081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-cp-kafka-headless:9092
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:18081
    depends_on:
      - kafka-cp-kafka-headless

  ### Schema Registry UI ###

  schema-registry-ui:
    image: landoop/schema-registry-ui:0.9.4
    hostname: schema-registry-ui
    platform: linux/amd64
    ports:
      - "8001:8000"
    environment:
      SCHEMAREGISTRY_URL: http://schema-registry:18081/
    depends_on:
      - schema-registry

  ### Flink Job Cluster ###

  flink-master:
    image: flink-job-fraud-demo:latest
    ports:
      - "8081:8081"
    command: job-cluster --job-classname com.ververica.field.dynamicrules.Main -Djobmanager.rpc.address=flink-master -Dparallelism.default=2 --data-source kafka --rules-source kafka --alerts-sink kafka --rules-export-sink kafka --latency-sink kafka --kafka-host kafka-cp-kafka-headless --kafka-port 9092
    depends_on:
      - kafka-cp-kafka-headless

  flink-task-manager:
    image: flink-job-fraud-demo:latest
    command: task-manager -Djobmanager.rpc.address=flink-master
    deploy:
      replicas: ${DEFAULT_PARALLELISM:-2}
    depends_on:
      - kafka-cp-kafka-headless

  ### Spring Boot Demo###

  demo:
    image: demo-fraud-webapp:latest
    hostname: demo
    ports:
      - "5656:5656"
    depends_on:
      - zookeeper
      - kafka-cp-kafka-headless
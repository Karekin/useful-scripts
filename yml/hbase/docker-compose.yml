version: "2"
services:
  namenode:
    image: apache/hadoop:3.3.6
    hostname: namenode
    command: ["hdfs", "namenode"]
    ports:
      - 9870:9870
      - 8020:8020
    env_file:
      - ./config
    environment:
      ENSURE_NAMENODE_DIR: "/tmp/hadoop-root/dfs/name"

  datanode:
    image: apache/hadoop:3.3.6
    command: ["hdfs", "datanode"]
    env_file:
      - ./config

  resourcemanager:
    image: apache/hadoop:3.3.6
    hostname: resourcemanager
    command: ["yarn", "resourcemanager"]
    ports:
      - 8088:8088
    env_file:
      - ./config
    volumes:
      - ./test.sh:/opt/test.sh

  nodemanager:
    image: apache/hadoop:3.3.6
    command: ["yarn", "nodemanager"]
    env_file:
      - ./config

  zoo1:
    image: bitnami/zookeeper:latest
    container_name: zoo1
    ports:
      - "2181:2181"
      - "2888:2888"
      - "3888:3888"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - ./data/zookeeper:/bitnami/zookeeper

  hbase:
    image: hbase-pseudo:latest
    hostname: docker-linux
    ports:
      - 60010:60010
      - 16010:16010
      - 16000:16000
      - 16020:16020
      - 16030:16030
    volumes:
      - ./data/hbase:/opt/hbase/data
      - ./data/logs/hbase:/opt/hbase/logs

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"        # PLAINTEXT 外部端口
      - "29092:29092"      # PLAINTEXT_EXTERNAL 外部端口
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zoo1:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_EXTERNAL://localhost:29092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_EXTERNAL:PLAINTEXT
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092,PLAINTEXT_EXTERNAL://0.0.0.0:29092
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    volumes:
      - ./data/kafka:/bitnami/kafka
      - /etc/localtime:/etc/localtime
    logging:
      driver: json-file
      options:
        max-size: "100m"
        max-file: "2"

  redis:
    image: redis:6.2  # Redis 镜像
    container_name: redis
    ports:
      - "6379:6379"  # Redis 端口
    command: [ "redis-server", "--appendonly", "yes" ]
    volumes:
      - ./data/redis:/data


networks:
  default:
    driver: bridge
